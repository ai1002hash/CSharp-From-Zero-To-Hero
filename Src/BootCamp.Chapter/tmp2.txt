commit ec6064039243e4591cefa1398271acee53a71581
Merge: ac9ef72 080a270 a8f952c
Author: ai1002hash <glenganderton@proton.me>
Date:   Tue Apr 16 13:51:11 2024 +1000

    On Chapter1/Homework/4: Checking out Chapter1/Homework/3
    
    Stashing uncommitted changes before performing a checkout of 'Chapter1/Homework/3'. Pop or apply these changes to restore them.

diff --cc Src/BootCamp.Chapter/Lesson4.cs
index 252b20a,252b20a,0000000..685eadf
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Lesson4.cs
+++ b/Src/BootCamp.Chapter/Lesson4.cs
@@@@ -1,67 -1,67 -1,0 +1,102 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.Text;
  +
  +namespace BootCamp.Chapter
  +{
  +    internal class Lesson4
  +    {
+++
+++        const float floatError = -1.0f;
+++        const int intError = -1;
+++        const string stringError = "-";
  +        public static void Demo()
  +        {
  +
  +            int numPeopleToCheck = promptInt("How many people would you like to find their BMI?");
  +
  +            for (int i = 0; i < numPeopleToCheck; i++)
  +            {
  +                string firstName = promptString("Please enter your name:");
  +                string lastName = promptString("Please enter your last name:");
  +                int age = promptInt("Please enter your age:");
  +                float weight = promptFloat("Please enter your weight in kg:");
  +                float height = promptFloat("Please enter your height in cm:");
  +                float bmi = BodyMassIndex(weight, height);
  +
  +                Console.WriteLine($"{firstName} {lastName} is {age} years old, his weight is {weight}kg and his height is {height}cm and BMI is {bmi}");
  +            }
  +
  +        }
  +
  +        public static float BodyMassIndex(float weight, float height)
  +        {
+++            if (weight <= 0) 
+++            {
+++                Console.WriteLine($"Weight cannot be equal or less than zero, but was {weight}");
+++            }
+++
+++            if (height <= 0) 
+++            { 
+++            Console.WriteLine($"Height cannot be equal or less than zero, but was {weight}");
+++            }
+++
  +            return weight / (height * height);
  +        }
  +
  +        public static float promptFloat(string input)
  +        {
  +            bool isFloat;
  +            float inputResult;
  +
  +            Console.WriteLine(input);
  +
  +            isFloat = float.TryParse(Console.ReadLine(), out inputResult);
  +
  +            if (isFloat)
  +            {
  +                return inputResult;
  +            }
  +
  +                Console.WriteLine($"{input} is not a valid number.");
--                 return -1;
+++                return floatError;
  +
  +        }
  +
  +        public static string promptString(string input)
  +        {
+++       
  +            Console.WriteLine(input);
--             return Console.ReadLine();
+++            string stringCheck = Console.ReadLine();
+++
+++            if (!string.IsNullOrEmpty(stringCheck))
+++            {
+++                return stringCheck;
+++            }
+++
+++            Console.WriteLine("Name cannot be empty.");
+++            return stringError;
  +
  +        }
  +
  +        public static int promptInt(string input)
  +        {
+++            bool isInt;
+++            int inputResult;
+++
  +            Console.WriteLine(input);
--             return int.Parse(Console.ReadLine());
+++
+++            isInt = int.TryParse(Console.ReadLine(), out inputResult);
+++
+++            if (isInt)
+++            {
+++                return inputResult;
+++            }
+++
+++            Console.WriteLine($"{input} is not a valid number.");
+++            return intError;
  +        }
  +
  +
  +    }
  +}

commit 5b8112033eeffc95ba178e2deb8d15c9d2a248bb
Merge: 1028a5e 4bd5d5a bff960a
Author: ai1002hash <glenganderton@proton.me>
Date:   Thu Apr 11 20:49:49 2024 +1000

    WIP on Chapter1/Homework/1And2: 1028a5e Added the "WORLD !" back in

diff --cc Src/BootCamp.Chapter/Program.cs
index 7a10b94,7a10b94,0000000..6568682
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Program.cs
+++ b/Src/BootCamp.Chapter/Program.cs
@@@@ -1,13 -1,13 -1,0 +1,16 @@@@
  +﻿using System;
  +
  +namespace BootCamp.Chapter
  +{
  +    class Program
  +    {
  +        static void Main(string[] args)
  +        {
  +            Console.WriteLine("Hello World!");
  +            Console.WriteLine("Hello World!");
+++
+++            //TODO: Finish Later
+++            Console.ReadLine();
  +        }
  +    }
  +}

tree df24e8cfb27afa4b9bbb551b29760943a2f6de9d

.gitignore
Bootcamp.sln
LICENSE
README.md
Src/
Tests/
azure-pipelines.yml

commit 6388e84852365d115d86e05945cedba1e6582d8f
Merge: 1028a5e 1bf6aae 9df7b5f
Author: ai1002hash <glenganderton@proton.me>
Date:   Thu Apr 11 20:55:33 2024 +1000

    WIP on Chapter1/Homework/1And2: 1028a5e Added the "WORLD !" back in

diff --cc Src/BootCamp.Chapter/Program.cs
index 7a10b94,7a10b94,0000000..6568682
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Program.cs
+++ b/Src/BootCamp.Chapter/Program.cs
@@@@ -1,13 -1,13 -1,0 +1,16 @@@@
  +﻿using System;
  +
  +namespace BootCamp.Chapter
  +{
  +    class Program
  +    {
  +        static void Main(string[] args)
  +        {
  +            Console.WriteLine("Hello World!");
  +            Console.WriteLine("Hello World!");
+++
+++            //TODO: Finish Later
+++            Console.ReadLine();
  +        }
  +    }
  +}

commit 8e08aed38e72c458f8d6de2b1af1f7caa3310dce
Merge: ac9ef72 c4e0184 8a24a42
Author: ai1002hash <glenganderton@proton.me>
Date:   Tue Apr 16 14:31:44 2024 +1000

    On Chapter1/Homework/4: Homework 4 completed

diff --cc Src/BootCamp.Chapter/Checks.cs
index 4986493,4986493,0000000..63193e8
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Checks.cs
+++ b/Src/BootCamp.Chapter/Checks.cs
@@@@ -1,41 -1,41 -1,0 +1,45 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.Text;
  +
  +namespace BootCamp.Chapter
  +{
  +    /// <summary>
  +    /// Test class is used to test your implementation.
  +    /// Each homework will have a set of steps that you will have to do.
  +    /// You can name your functions however you want, but to validate your solution, place them here.
  +    /// DO NOT CALL FUNCTIONS FROM TESTS CLASS
  +    /// DO NOT IMPLEMENT FUNCTIONS IN TESTS CLASS
  +    /// TESTS CLASS FUNCTIONS SHOULD ALL HAVE 1 LINE OF CODE
  +    /// </summary>
  +    public static class Checks
  +    {
  +        public static int PromptInt(string message)
  +        {
--             // To do: call your implementation. 
--             return 0;
+++            // To do: call your implementation.
+++            int age = Lesson4.promptInt(message);
+++            return age;
  +        }
  +
  +        public static string PromptString(string message)
  +        {
--             // To do: call your implementation. 
--             return "";
+++            // To do: call your implementation.
+++            string firstName = Lesson4.promptString(message);
+++            return firstName;
  +        }
  +
  +        public static float PromptFloat(string message)
  +        {
  +            // To do: call your implementation. 
--             return 0;
+++            float weight = Lesson4.promptFloat(message);
+++            return weight;
  +        }
  +
  +        public static float CalculateBmi(float weight, float height)
  +        {
--             // To do: call your implementation. 
--             return 0;
+++            // To do: call your implementation.
+++            float bmi = Lesson4.BodyMassIndex(weight, height);
+++            return bmi;
  +        }
  +    }
  +}
diff --cc Src/BootCamp.Chapter/Lesson4.cs
index 252b20a,252b20a,0000000..5b30ba5
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Lesson4.cs
+++ b/Src/BootCamp.Chapter/Lesson4.cs
@@@@ -1,67 -1,67 -1,0 +1,104 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.Text;
  +
  +namespace BootCamp.Chapter
  +{
  +    internal class Lesson4
  +    {
+++
+++        const float floatError = -1.0f;
+++        const int intError = -1;
+++        const string stringError = "-";
  +        public static void Demo()
  +        {
  +
  +            int numPeopleToCheck = promptInt("How many people would you like to find their BMI?");
  +
  +            for (int i = 0; i < numPeopleToCheck; i++)
  +            {
  +                string firstName = promptString("Please enter your name:");
  +                string lastName = promptString("Please enter your last name:");
  +                int age = promptInt("Please enter your age:");
  +                float weight = promptFloat("Please enter your weight in kg:");
  +                float height = promptFloat("Please enter your height in cm:");
  +                float bmi = BodyMassIndex(weight, height);
  +
  +                Console.WriteLine($"{firstName} {lastName} is {age} years old, his weight is {weight}kg and his height is {height}cm and BMI is {bmi}");
  +            }
  +
  +        }
  +
  +        public static float BodyMassIndex(float weight, float height)
  +        {
+++            if (weight <= 0) 
+++            {
+++                Console.WriteLine($"Weight cannot be equal or less than zero, but was {weight}");
+++            }
+++
+++            if (height <= 0) 
+++            { 
+++            Console.WriteLine($"Height cannot be equal or less than zero, but was {weight}");
+++            }
+++
  +            return weight / (height * height);
  +        }
  +
  +        public static float promptFloat(string input)
  +        {
  +            bool isFloat;
  +            float inputResult;
  +
  +            Console.WriteLine(input);
+++            var promptReturn = Console.ReadLine();
  +
--             isFloat = float.TryParse(Console.ReadLine(), out inputResult);
+++            isFloat = float.TryParse(promptReturn, out inputResult);
  +
  +            if (isFloat)
  +            {
  +                return inputResult;
  +            }
  +
--                 Console.WriteLine($"{input} is not a valid number.");
--                 return -1;
+++                Console.WriteLine($"\"{promptReturn}\" is not a valid number.");
+++                return floatError;
  +
  +        }
  +
  +        public static string promptString(string input)
  +        {
+++       
  +            Console.WriteLine(input);
--             return Console.ReadLine();
+++            string stringCheck = Console.ReadLine();
+++
+++            if (!string.IsNullOrEmpty(stringCheck))
+++            {
+++                return stringCheck;
+++            }
+++
+++            Console.WriteLine("Name cannot be empty.");
+++            return stringError;
  +
  +        }
  +
  +        public static int promptInt(string input)
  +        {
+++            bool isInt;
+++            int inputResult;
+++
  +            Console.WriteLine(input);
--             return int.Parse(Console.ReadLine());
+++            var promptReturn = Console.ReadLine();
+++
+++            isInt = int.TryParse(promptReturn, out inputResult);
+++
+++            if (isInt)
+++            {
+++                return inputResult;
+++            }
+++
+++            Console.WriteLine($"\"{promptReturn}\" is not a valid number.");
+++            return intError;
  +        }
  +
  +
  +    }
  +}

commit be8f8ac996b42b6472b7a0d05987b6601c3f64dd
Merge: 0ca5c0e b59b6c1 c25a23d
Author: ai1002hash <glenganderton@proton.me>
Date:   Tue Apr 16 09:36:11 2024 +1000

    On Chapter1/Homework/4: Checking out Chapter1/Homework/3
    
    Stashing uncommitted changes before performing a checkout of 'Chapter1/Homework/3'. Pop or apply these changes to restore them.

diff --cc Src/BootCamp.Chapter/Lesson4.cs
index fbb6952,fbb6952,0000000..8afd7ff
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Lesson4.cs
+++ b/Src/BootCamp.Chapter/Lesson4.cs
@@@@ -1,54 -1,54 -1,0 +1,72 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.Text;
  +
  +namespace BootCamp.Chapter
  +{
  +    internal class Lesson4
  +    {
  +        public static void Demo()
  +        {
  +
  +            int numPeopleToCheck = promptInt("How many people would you like to find their BMI?");
  +
  +            for (int i = 0; i < numPeopleToCheck; i++)
  +            {
  +                string firstName = promptString("Please enter your name:");
  +                string lastName = promptString("Please enter your last name:");
  +                int age = promptInt("Please enter your age:");
  +                float weight = promptFloat("Please enter your weight in kg:");
  +                float height = promptFloat("Please enter your height in cm:");
  +                float bmi = BodyMassIndex(weight, height);
  +
  +                Console.WriteLine($"{firstName} {lastName} is {age} years old, his weight is {weight}kg and his height is {height}cm and BMI is {bmi}");
  +            }
  +
  +        }
  +
  +        public static float BodyMassIndex(float weight, float height)
  +        {
  +            return weight / (height * height);
  +        }
  +
  +        public static float promptFloat(string input)
  +        {
+++            bool isNumber;
+++            float numResult;
+++
  +            Console.WriteLine(input);
--             return float.Parse(Console.ReadLine());
+++
+++            isNumber = float.TryParse(Console.ReadLine(), out numResult);
+++
+++            if (isNumber)
+++            {
+++
+++            }
+++
+++            if (!isNumber)
+++            {
+++                Console.WriteLine($"{input} is not a valid number.");
+++                return -1;
+++            }
+++
+++            return -1;
+++
  +        }
  +
  +        public static string promptString(string input)
  +        {
  +            Console.WriteLine(input);
  +            return Console.ReadLine();
  +
  +        }
  +
  +        public static int promptInt(string input)
  +        {
  +            Console.WriteLine(input);
  +            return int.Parse(Console.ReadLine());
  +        }
  +
  +
  +    }
  +}

tree af90eefe56c71e6e0538f994a4131d073f97d6cc

.gitignore
Bootcamp.sln
LICENSE
README.md
Src/
Tests/
azure-pipelines.yml

commit 375eac01be5de779122e0689ea605706fafd4153
Merge: 6afd894 ad999df 2e1faeb
Author: ai1002hash <glenganderton@proton.me>
Date:   Mon Apr 15 14:37:36 2024 +1000

    On Chapter1/Homework/4: Checking out Chapter1/Homework/3
    
    Stashing uncommitted changes before performing a checkout of 'Chapter1/Homework/3'. Pop or apply these changes to restore them.

diff --cc Src/BootCamp.Chapter/Program.cs
index 94e5531,94e5531,0000000..9a91605
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Program.cs
+++ b/Src/BootCamp.Chapter/Program.cs
@@@@ -1,14 -1,14 -1,0 +1,15 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.IO;
  +using Console = System.Console;
  +
  +namespace BootCamp.Chapter
  +{
  +    class Program
  +    {
  +        static void Main(string[] args)
  +        {
+++            Lesson4.Demo();
  +        }
  +    }
  +}

commit 319f976e9f5cb2e35c20cb7984694cf05b2c27bd
Merge: 6afd894 d52fde0 a396666
Author: ai1002hash <glenganderton@proton.me>
Date:   Tue Apr 16 09:17:21 2024 +1000

    On Chapter1/Homework/4: Checking out Chapter1/Homework/3
    
    Stashing uncommitted changes before performing a checkout of 'Chapter1/Homework/3'. Pop or apply these changes to restore them.

diff --cc Src/BootCamp.Chapter/Program.cs
index 94e5531,94e5531,0000000..9a91605
mode 100644,100644,000000..100644
--- a/Src/BootCamp.Chapter/Program.cs
+++ b/Src/BootCamp.Chapter/Program.cs
@@@@ -1,14 -1,14 -1,0 +1,15 @@@@
  +﻿using System;
  +using System.Collections.Generic;
  +using System.IO;
  +using Console = System.Console;
  +
  +namespace BootCamp.Chapter
  +{
  +    class Program
  +    {
  +        static void Main(string[] args)
  +        {
+++            Lesson4.Demo();
  +        }
  +    }
  +}
